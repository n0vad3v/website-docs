name: Triggered workflow turn style
on:
  repository_dispatch:
    types: [triggered]
jobs:
  run:
    name: Build website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
          
      - name: Turnstyle
        uses: softprops/turnstyle@v1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install deps
        run: yarn
      
      - name: Restore markdown contents
        uses: actions/cache@v2
        id: markdown-contents
        with: 
          path: ./markdown-pages/contents/
          key: ${{ runner.os }}-markdown-contents-cache-${{ github.event.client_payload.sha }}
          restore-keys: | 
            ${{ runner.os }}-markdown-contents-cache-${{ github.event.client_payload.sha }}
            ${{ runner.os }}-markdown-contents-cache
            ${{ runner.os }}-
            
      - name: File Existence
        uses: andstor/file-existence-action@v1.0.1
        id: check_files
        with:
          files: "./markdown-pages/contents/"

      - name: Check restore status
        if: steps.check_files.outputs.files_exists != 'true'
        run: ï½œ
          GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn download:docs-dm:all
          GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn download:docs-dbaas
          GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn download:docs-tidb-operator:all
          GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn download:docs-tidb:en:all
          GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn download:docs-tidb:zh:all
          
      - name: Split ref
        id: git-ref
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          ref=${{ github.event.client_payload.ref }}
          repo=${{ github.event.client_payload.repository }}
          echo "::set-output name=ref::${ref##*/}"
          echo "::set-output name=repo::${repo##*/}"
          
      - name: Get ref
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "get ${{ steps.git-ref.outputs.ref }}, ${{ steps.git-ref.outputs.repo }} "
      
      - name: Get last cache commit hash
        if: steps.check_files.outputs.files_exists == 'true'
        id: cache-commit
        run: |
           path=/home/runner/work/website-docs/website-docs/markdown-pages/contents/zh/${{ steps.git-ref.outputs.repo }}/${{ steps.git-ref.outputs.ref }}/hash.lock
           hash=""
           if [ -f "$path" ];then
           hash=$(cat $path)  
           fi
           echo "${{ github.event.client_payload.sha }}" > $path
           echo "get cache hash: $hash"
           echo "::set-output name=hash::${hash}"
            
      - name: Sync docs
        run: GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn sync ${{ steps.git-ref.outputs.repo }} ${{ steps.git-ref.outputs.ref }} ${{ github.event.client_payload.sha }} ${{ steps.cache-commit.outputs.hash }}

      - name: Restore gatsby cache
        uses: actions/cache@v2
        id: gatsby-cache
        with:
          path: ./.cache
          key: ${{ runner.os }}-gatsby-cache2-${{ github.event.client_payload.ref }}-${{ github.event.client_payload.sha }}
          restore-keys: |
            ${{ runner.os }}-gatsby-cache2-${{ github.event.client_payload.ref }}-${{ github.event.client_payload.sha }}
            ${{ runner.os }}-gatsby-cache2-

      - name: Restore gatsby build
        uses: actions/cache@v2
        id: gatsby-build
        with:
          path: ./public
          key: ${{ runner.os }}-gatsby-build2-${{ github.event.client_payload.sha }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build2-${{ github.event.client_payload.sha }}
            ${{ runner.os }}-gatsby-build2-

      - name: Build website
        run: GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES=true GATSBY_ALGOLIA_APPLICATION_ID=${{ secrets.ALGOLIA_APPLICATION_ID }} GATSBY_ALGOLIA_API_KEY=${{ secrets.ALGOLIA_API_KEY }} yarn build --write-to-file

      - name: Move changed files from gatsby
        run: (yes|cp -f .cache/*Pages.txt public)|true

      - name: List public
        run: ls ./public

      - name: Update cache commit hash
        run: |
          echo "${{ github.event.client_payload.sha }}" > /home/runner/work/website-docs/website-docs/markdown-pages/contents/zh/${{ steps.git-ref.outputs.repo }}/${{ steps.git-ref.outputs.ref }}/hash.lock
          echo "${{ github.event.client_payload.sha }}" > /home/runner/work/website-docs/website-docs/markdown-pages/contents/en/${{ steps.git-ref.outputs.repo }}/${{ steps.git-ref.outputs.ref }}/hash.lock
#       - name: cat new page
#         run : cat ./public/newPages.txt
      
#       - name: cat deleted page
#         run : cat ./public/deletedPages.txt

      # - name: Deploy
      #   run: |
      #     rsync -avz --delete public/ "${{ secrets.SSH_USER }}@${{ secrets.BJ_1_HOST }}:${{ secrets.DEPLOY_PATH }}"
      #     rsync -avz --delete public/ "${{ secrets.SSH_USER }}@${{ secrets.BJ_2_HOST }}:${{ secrets.DEPLOY_PATH }}"
      #     rsync -avz --delete public/ "${{ secrets.SSH_USER }}@${{ secrets.LA_1_HOST }}:${{ secrets.DEPLOY_PATH }}"
      #     rsync -avz --delete public/ "${{ secrets.SSH_USER }}@${{ secrets.LA_2_HOST }}:${{ secrets.DEPLOY_PATH }}"
